name: Nightly Tests on GCP

on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC
  workflow_dispatch:     # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Timeout for the entire job

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Start GCP VM
        run: |
          gcloud compute instances start ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }}
          # Wait for VM to fully boot
          sleep 30

      - name: Run tests on VM
        id: run_tests
        timeout-minutes: 40  # Timeout for just the tests run
        run: |
          # Get current timestamp for results directory
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          
          # Run commands on the VM to clone repo, set up, and execute tests
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }} --command="
            # Clean up any previous runs
            rm -rf ~/spring_data_repo && mkdir -p ~/spring_data_repo
          
            # Clone the repository
            git clone https://github.com/${{ github.repository }} ~/spring_data_repo
            cd ~/spring_data_repo
            git checkout ${{ github.ref_name }}
          
            # Run tests
            mvn clean test -Pall-tests -B -U
          
            # Save exit code to report success/failure
            echo \$? > ~/test_exit_code
          "
          
          # Create timestamped directory for this test run
          mkdir -p test-results/$TIMESTAMP
          
          # Copy test results back
          gcloud compute scp --recurse ${{ secrets.GCP_VM_NAME }}:~/spring_data_repo/target/surefire-reports ./test-results/$TIMESTAMP --zone=${{ secrets.GCP_VM_ZONE }} || true
          
          # Implement file rotation - keep only 20 latest test result directories
          echo "Rotating test result directories, keeping only the 20 latest"
          ls -t test-results | tail -n +21 | xargs -I {} rm -rf test-results/{}
          echo "Current test result directories after rotation:"
          ls -la test-results/
          
          # Check if tests failed
          TEST_EXIT_CODE=$(gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }} --command="cat ~/test_exit_code")
          if [ "$TEST_EXIT_CODE" != "0" ]; then
            echo "Tests failed with exit code $TEST_EXIT_CODE"
            exit 1
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ github.run_id }}
          path: test-results
          retention-days: 14

      - name: Stop GCP VM
        if: always()  # Ensure VM is stopped even if tests fail
        run: |
          gcloud compute instances stop ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }}
